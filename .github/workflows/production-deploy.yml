name: 🚢 Deploy to Production

on:
  workflow_dispatch:
    inputs:
      confirm_production:
        description: 'Typ          echo "**Production URL**: https://myteslalink.github.io" >> $GITHUB_STEP_SUMMARY
          echo "**Deployed At**: $(date -u '+%Y-%m-%d %H:%M UTC')" >> $GITHUB_STEP_SUMMARYDEPLOY" to confirm production deployment'
        required: true
        type: string
      include_latest_data:
        description: 'Include latest live channels data'
        required: false
        default: true
        type: boolean

permissions:
  contents: read

jobs:
  validate-production:
    runs-on: ubuntu-latest
    steps:
      - name: 🛡️ Validate production deployment
        run: |
          if [ "${{ github.event.inputs.confirm_production }}" != "DEPLOY" ]; then
            echo "❌ Production deployment requires confirmation."
            echo "Please type 'DEPLOY' in the confirm_production input to proceed."
            exit 1
          fi
          echo "✅ Production deployment confirmed"

  deploy-to-production:
    runs-on: ubuntu-latest
    needs: [validate-production]
    
    steps:
      - name: 📥 Checkout source repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          
      - name: 🟢 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          
      - name: 📦 Install dependencies
        run: npm install --legacy-peer-deps
        
      - name: 🔧 Configure environment for production
        run: |
          # Create production .env with existing Firebase config
          echo "REACT_APP_FIREBASE_API_KEY=${{ secrets.REACT_APP_FIREBASE_API_KEY }}" >> .env
          echo "REACT_APP_FIREBASE_AUTH_DOMAIN=${{ secrets.REACT_APP_FIREBASE_AUTH_DOMAIN }}" >> .env
          echo "REACT_APP_FIREBASE_PROJECT_ID=${{ secrets.REACT_APP_FIREBASE_PROJECT_ID }}" >> .env
          echo "REACT_APP_FIREBASE_STORAGE_BUCKET=${{ secrets.REACT_APP_FIREBASE_STORAGE_BUCKET }}" >> .env
          echo "REACT_APP_FIREBASE_MESSAGING_SENDER_ID=${{ secrets.REACT_APP_FIREBASE_MESSAGING_SENDER_ID }}" >> .env
          echo "REACT_APP_FIREBASE_APP_ID=${{ secrets.REACT_APP_FIREBASE_APP_ID }}" >> .env
          echo "REACT_APP_FIREBASE_DATABASE_URL=${{ secrets.REACT_APP_FIREBASE_DATABASE_URL }}" >> .env
          echo "REACT_APP_GA_TRACKING_ID=G-61TG8XGM1P" >> .env
          echo "✅ Production environment configured"
          
      - name: 📝 Update package.json for production
        run: |
          # Set correct homepage for production
          npm pkg set homepage="https://myteslalink.github.io"
          echo "✅ Updated homepage for production deployment"
          
      - name: 🛠️ Build for production
        run: |
          echo "🚀 Building TeslaLink for production..."
          GENERATE_SOURCEMAP=false npm run build
          echo "✅ Production build completed"
          
      - name: 📄 Include latest live channels data
        if: github.event.inputs.include_latest_data == 'true'
        run: |
          if [ -f "public/popular_live.json" ]; then
            cp public/popular_live.json build/popular_live.json
            echo "✅ Included latest live channels data"
          else
            echo "⚠️ No live channels data found - production will use empty data"
          fi
          
      - name: 📋 Create production deployment info
        run: |
          cat > build/deployment-info.json << EOF
          {
            "deployedAt": "$(date -u +%Y-%m-%dT%H:%M:%SZ)",
            "sourceCommit": "${{ github.sha }}",
            "sourceRepository": "${{ github.repository }}",
            "deploymentWorkflow": "${{ github.workflow }}",
            "version": "$(npm pkg get version | tr -d '"')",
            "environment": "production"
          }
          EOF
          echo "✅ Created deployment info"
          
      - name: 🚀 Deploy to production repository
        uses: peaceiris/actions-gh-pages@v3
        with:
          personal_token: ${{ secrets.PRODUCTION_DEPLOY_TOKEN }}
          external_repository: myteslalink/myteslalink.github.io
          publish_dir: ./build
          publish_branch: main
          force_orphan: true
          user_name: 'github-actions[bot]'
          user_email: '41898282+github-actions[bot]@users.noreply.github.com'
          commit_message: |
            🚀 Deploy TeslaLink to Production
            
            Source: ${{ github.repository }}@${{ github.sha }}
            Build: ${{ github.run_number }}
            Deployed: $(date -u '+%Y-%m-%d %H:%M UTC')
            
      - name: 📝 Production deployment summary
        run: |
          echo "## 🚢 Production Deployment Complete!" >> $GITHUB_STEP_SUMMARY
          echo "**Production URL**: https://myteslalink.github.io" >> $GITHUB_STEP_SUMMARY
          echo "**Deployed At**: $(date -u '+%Y-%m-%d %H:%M UTC')" >> $GITHUB_STEP_SUMMARY
          echo "**Source Commit**: ${{ github.sha }}" >> $GITHUB_STEP_SUMMARY
          echo "**Build Number**: ${{ github.run_number }}" >> $GITHUB_STEP_SUMMARY
          echo "**Data Included**: ${{ github.event.inputs.include_latest_data }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### 🎉 TeslaLink is now live in production!" >> $GITHUB_STEP_SUMMARY
          echo "Users can access the app at https://myteslalink.github.io" >> $GITHUB_STEP_SUMMARY