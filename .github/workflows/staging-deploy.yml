name: üöÄ Deploy to Staging (GitHub Pages)

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  workflow_dispatch:

permissions:
  contents: write
  pull-requests: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
concurrency:
  group: staging-deploy
  cancel-in-progress: false

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
      - name: üì• Checkout repository
        uses: actions/checkout@v4
        
      - name: üü¢ Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          
      - name: üì¶ Install dependencies
        run: npm install --legacy-peer-deps
        
      - name: üõ†Ô∏è Build application
        env:
          # Use same Firebase database as production (stored in GitHub secrets)
          REACT_APP_FIREBASE_API_KEY: ${{ secrets.REACT_APP_FIREBASE_API_KEY }}
          REACT_APP_FIREBASE_AUTH_DOMAIN: ${{ secrets.REACT_APP_FIREBASE_AUTH_DOMAIN }}
          REACT_APP_FIREBASE_PROJECT_ID: ${{ secrets.REACT_APP_FIREBASE_PROJECT_ID }}
          REACT_APP_FIREBASE_STORAGE_BUCKET: ${{ secrets.REACT_APP_FIREBASE_STORAGE_BUCKET }}
          REACT_APP_FIREBASE_MESSAGING_SENDER_ID: ${{ secrets.REACT_APP_FIREBASE_MESSAGING_SENDER_ID }}
          REACT_APP_FIREBASE_APP_ID: ${{ secrets.REACT_APP_FIREBASE_APP_ID }}
          REACT_APP_FIREBASE_DATABASE_URL: ${{ secrets.REACT_APP_FIREBASE_DATABASE_URL }}
          REACT_APP_GA_TRACKING_ID: G-61TG8XGM1P
          GENERATE_SOURCEMAP: false
        run: npm run build
        
      - name: üìÑ Include existing data files
        run: |
          # Copy existing popular_live.json if it exists (preserves existing data)
          if [ -f "public/popular_live.json" ]; then
            cp public/popular_live.json build/popular_live.json
            echo "‚úÖ Included existing popular_live.json"
          else
            echo "‚ÑπÔ∏è  No popular_live.json found, build will proceed without it"
          fi
          
      - name: ÔøΩ Deploy to GitHub Pages
        if: github.ref == 'refs/heads/master'
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./build
          publish_branch: gh-pages
          force_orphan: true
        
      - name: üìù Comment on PR (if applicable)
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: 'üöÄ **Staging Build Complete!**\n\nYour changes have been built successfully. Once merged to master, they will be deployed to staging environment.\n\n*Note: Live channel data updates are managed separately and don\'t run on every build.*'
            });